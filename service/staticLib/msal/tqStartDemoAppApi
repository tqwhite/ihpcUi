#!/usr/bin/env bash
# add -x to the shebang for debugging

# set -e # die on error
# trap 'echo "got an error"' ERR # or INT DEBUG TERM EXIT RETURN
#set -o nounset #error on access of uninitialized variable
# set +o nounset #SUPPRESS error on access of uninitialized variable
# When you want to access a variable that may or may not have been set, use "${VARNAME-}" "${FOO:-}" instead of "$VARNAME", and youâ€™re good.
# Use :- if you want to test variables that could be undeclared. For instance, with if [[ "${NAME:-}" = "Kevin" ]], $NAME will evaluate to Kevin if the variable is empty. The variable itself will remain unchanged. The syntax to assign a default value is ${NAME:=Kevin}.


# ----------------------------------------------------------------------
# colors

BLK="\033[30m";
BLU="\033[34m";
GRN="\033[32m";
CYA="\033[36m"; #cyan
RED="\033[31m";
PUR="\033[35m"; #purple
BRN="\033[33m";
BLU="\033[34m";
WHI="\033[00;37m";
RES="\033[00m"; #reset


THISDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"



pushd "${THISDIR}/1-call-api/SPA" > /dev/null; 
node server.js &
disown
popd > /dev/null;

pushd "${THISDIR}/1-call-api/API" > /dev/null; 
node app.js &
popd > /dev/null;

sleep 2
echo -e "\n\n";
read -p "Quit this App (and all NodeJS apps)? [enter]" -n 1 -r #does not require carriage return

echo "killall node";
killall node;
reset;
echo -e "\n\nAll node is quit. type initihapi if you want\n\n";
#source /Users/tqwhite/Documents/webdev/ihpCreator/applications/api/system/management/initDev;