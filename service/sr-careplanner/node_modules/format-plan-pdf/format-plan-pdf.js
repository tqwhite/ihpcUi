'use strict';

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {

	const qtools = args.qtools;
	const pdfMake = args.pdfMake;
	const student = args.student;
	const plan = args.plan;

	const self = this;


	//LOCAL VARIABLES ====================================

	//LOCAL FUNCTIONS ====================================

	const addElement=function(object, name, source){
		if (source){
			object[name]=source;
			object.test=object.test?name:object.test+name;
		}
	}
	
	const genTableCell=function(text, styleName, colSpan, rowSpan, alignment){
	//genTableCell(text, styleName, colSpan, rowSpan, alignment)
	let outObj={};
		addElement(outObj, 'text', text);
		addElement(outObj, 'style', styleName);
		addElement(outObj, 'colSpan', colSpan);
		addElement(outObj, 'rowSpan', rowSpan);
		addElement(outObj, 'alignment', alignment);
	

	
		if(!outObj.test || !outObj.test.match(/[^text]/)){
			outObj=text;
		}
		
		delete outObj.test;


		return outObj
	}
genTableCell('Header with Colspan = 2','tableHeader', 2, 'center' )	
	const genPdfSpec = function() {
		return [
		
		'Each cell-element can set a rowSpan or colSpan',
		{
			style: 'tableExample',
			color: '#444',
			table: {
				widths: [200, 'auto', 'auto'],
				headerRows: 2,
				// keepWithHeaderRows: 1,
				body: [
					[
						genTableCell('Header with Colspan = 2','tableHeader', 2, '',  'center' ), 
						genTableCell('','', '', '', '' ), 
						genTableCell('Header 3','tableHeader', '', '', 'center' )
					],
					[
						genTableCell('Header 1','tableHeader', '', '', 'center' ), 
						genTableCell('Header 2','tableHeader', '', '', 'center' ), 
						genTableCell('Header 3','tableHeader', '', '', 'center' )
					],
					[
						genTableCell('Sample value 1','', '', '', '' ), 
						genTableCell('Sample value 2','', '', '', '' ), 
						genTableCell('Sample value 3','', '', '', '' )
					],
					[
						genTableCell('rowSpan set to 3\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor', '', '', 3, ''), 
						genTableCell('Sample value 2','', '', '', '' ), 
						genTableCell('Sample value 3','', '', '', '' )
					],
					[
						genTableCell('','', '', '', '' ), 
						genTableCell('Sample value 2','', '', '', '' ), 
						genTableCell('Sample value 3','', '', '', '' )
					],
					[
						genTableCell('Sample value 1','', '', '', '' ), 
						genTableCell('Sample value 2','', '', '', '' ), 
						genTableCell('Sample value 3','', '', '', '' )
					],
					[
						genTableCell('Sample value 1','', '', '', '' ), 
						genTableCell('Both:\nrowSpan and colSpan\ncan be defined at the same time', '', 2, 2, ''), 
						genTableCell('','', '', '', '' )
					],
					[
						genTableCell('Sample value 1','', '', '', '' ), 
						genTableCell('','', '', '', '' ), 
						genTableCell('','', '', '', '' )
					],
				]
			}
		},
		];
	}
	//METHODS AND PROPERTIES ====================================


	const documentObject = {
		background: 'CARE PLANNER',
		pageOrientation: 'landscape',
		pageMargins: [40, 60, 40, 60],
		defaultstyle: {},
		content: [],
		images:{},
		styles:{}

	}
	this.getDataUrl = function(callback) {

		//var docDefinition = { content: `Student: ${student.first} ${student.last}\n\n${getSimplePlanString()}` };


		documentObject.content = genPdfSpec();

		const pdfDocGenerator = pdfMake.createPdf(documentObject);
		pdfDocGenerator.getDataUrl(callback);


	}

	//API ENDPOINTS ====================================

	//INITIALIZATION ====================================

	console.log(__dirname);

	return this;
};

//END OF moduleFunction() ============================================================

module.exports = moduleFunction;
//module.exports = new moduleFunction();

